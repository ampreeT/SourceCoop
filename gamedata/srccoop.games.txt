"Games"
{
	"#default"
	{
		"Keys"
		{
			"IVEngineServer"
			{
				"windows"	"VEngineServer023"
				"linux"		"VEngineServer023"
			}
			"IServerGameDLL"
			{
				"windows"	"ServerGameDLL010"
				"linux"		"ServerGameDLL010"
			}
		}
		"Offsets"
		{
			"_OS_Detector_"
			{
				"windows"	"0"
				"linux"		"1"
			}
		}
		"Signatures"
		{
			"CreateEngineInterface"
			{
				"library"		"engine"
				"windows"		"@CreateInterface"
				"linux"			"@CreateInterface"
			}
			"CreateServerInterface"
			{
				"library"		"server"
				"windows"		"@CreateInterface"
				"linux"			"@CreateInterface"
			}
		}
		"Functions"
		{
			
			// __      _______ _____ _______ _    _         _      
			// \ \    / /_   _|  __ \__   __| |  | |  /\   | |     
			//  \ \  / /  | | | |__) | | |  | |  | | /  \  | |     
			//   \ \/ /   | | |  _  /  | |  | |  | |/ /\ \ | |     
			//    \  /   _| |_| | \ \  | |  | |__| / ____ \| |____ 
			//     \/   |_____|_|  \_\ |_|   \____/_/    \_\______|
			
			"CMultiplayRules::FAllowFlashlight"
			{
				"offset"	"CMultiplayRules::FAllowFlashlight"
				"hooktype"	"gamerules"
				"return"	"bool"
				"this"		"ignore"
			}
			"CMultiplayRules::IsMultiplayer"
			{
				"offset"	"CMultiplayRules::IsMultiplayer"
				"hooktype"	"gamerules"
				"return"	"bool"
				"this"		"ignore"
			}
			"CMultiplayRules::IsDeathmatch"
			{
				"offset"	"CMultiplayRules::IsDeathmatch"
				"hooktype"	"gamerules"
				"return"	"bool"
				"this"		"ignore"
			}
			"CBM_MP_GameRules::RestoreWorld"
			{
				"offset"	"CBM_MP_GameRules::RestoreWorld"
				"hooktype"	"gamerules"
				"return"	"int"
				"this"		"ignore"
			}
			"CBM_MP_GameRules::RespawnPlayers"
			{
				"offset"	"CBM_MP_GameRules::RespawnPlayers"
				"hooktype"	"gamerules"
				"return"	"int"
				"this"		"ignore"
			}
			"CBaseCombatCharacter::IRelationType"
			{
				"offset"	"CBaseCombatCharacter::IRelationType"
				"hooktype"	"entity"
				"return"	"int"
				"this"		"entity"
				"arguments"
				{
					"pTarget"
					{
						"type"	"cbaseentity"
					}
				}
			}
			"CAI_BaseNPC::IsPlayerAlly"
			{
				"offset"	"CAI_BaseNPC::IsPlayerAlly"
				"hooktype"	"entity"
				"return"	"bool"
				"this"		"entity"
				"arguments"
				{
					"pPlayer"
					{
						"type"	"cbaseentity"
					}
				}
			}
			"CProtoSniper::SelectSchedule"
			{
				"offset"	"CProtoSniper::SelectSchedule"
				"hooktype"	"entity"
				"return"	"int"
				"this"		"entity"
			}
			"CSceneEntity::FindNamedEntity"
			{
				"offset"	"CSceneEntity::FindNamedEntity"
				"hooktype"	"entity"
				"return"	"cbaseentity"
				"this"		"entity"
				"arguments"
				{
					"name"
					{
						"type"	"charptr"
					}
					"pActor"
					{
						"type"	"cbaseentity"
					}
					"bBaseFlexOnly"
					{
						"type"	"bool"
					}
					"bUseClear"
					{
						"type"	"bool"
					}
				}
			}
			"CSceneEntity::FindNamedEntityClosest"
			{
				"offset"	"CSceneEntity::FindNamedEntityClosest"
				"hooktype"	"entity"
				"return"	"cbaseentity"
				"this"		"entity"
				"arguments"
				{
					"name"
					{
						"type"	"charptr"
					}
					"pActor"
					{
						"type"	"cbaseentity"
					}
					"bBaseFlexOnly"
					{
						"type"	"bool"
					}
					"bUseClear"
					{
						"type"	"bool"
					}
					"pszSecondary"
					{
						"type"	"charptr"
					}
				}
			}
			"CBaseEntity::SetModel"
			{
				"offset"	"CBaseEntity::SetModel"
				"hooktype"	"entity"
				"return"	"void"
				"this"		"entity"
				"arguments"
				{
					"szModelName"
					{
						"type"	"charptr"
					}
				}
			}
			"CBaseEntity::AcceptInput"
			{
				"offset"	"CBaseEntity::AcceptInput"
				"hooktype"	"entity"
				"return"	"bool"
				"this"		"entity"
				"arguments"
				{
					"szInputName"
					{
						"type"	"charptr"
					}
					"pActivator"
					{
						"type"	"cbaseentity"
					}
					"pCaller"
					{
						"type"	"cbaseentity"
					}
					"Value"
					{
						"type"	"object"
						"size"	"20"
						"flags"	"byval odtor octor oassignop"
					}
					"outputID"
					{
						"type"	"int"
					}
				}
			}
			"CBasePickup::OnTryPickUp"
			{
				"offset"	"CBasePickup::OnTryPickUp"
				"hooktype"	"entity"
				"return"	"bool"
				"this"		"entity"
				"arguments"
				{
					"pOther"
					{
						"type"	"cbaseentity"
					}
				}
			}
			"CBaseEntity::Think"
			{
				"offset"	"CBaseEntity::Think"
				"hooktype"	"entity"
				"return"	"void"
				"this"		"entity"
			}
			"CBaseEntity::Blocked"
			{
				"offset"	"CBaseEntity::Blocked"
				"hooktype"	"entity"
				"return"	"bool"
				"this"		"entity"
				"arguments"
				{
					"pBlocker"
					{
						"type"	"cbaseentity"
					}
				}
			}
			"CBasePlayer::ChangeTeam"
			{
				"offset"	"CBasePlayer::ChangeTeam"
				"hooktype"	"entity"
				"return"	"void"
				"this"		"entity"
				"arguments"
				{
					"iTeamNum"
					{
						"type"	"int"
					}
					"bAutoTeam"
					{
						"type"	"bool"
					}
					"bSilent"
					{
						"type"	"bool"
					}
				}
			}
			"CBasePlayer::Spawn"
			{
				"offset"	"CBasePlayer::Spawn"
				"hooktype"	"entity"
				"return"	"void"
				"this"		"entity"
			}
			"CBaseEntity::ShouldCollide"
			{
				"offset"	"CBaseEntity::ShouldCollide"
				"hooktype"	"entity"
				"return"	"bool"
				"this"		"entity"
				"arguments"
				{
					"collisiongroup"
					{
						"type"	"int"
					}
					"contentsmask"
					{
						"type"	"int"
					}
				}
			}
			"CNPC_Ichthyosaur::IdleSound"
			{
				"offset"	"CNPC_Ichthyosaur::IdleSound"
				"hooktype"	"entity"
				"return"	"void"
				"this"		"entity"
			}
			"CBaseAnimating::HandleAnimEvent"
			{
				"offset"	"CBaseAnimating::HandleAnimEvent"
				"hooktype"	"entity"
				"return"	"void"
				"this"		"entity"
				"arguments"
				{
					"pEvent"
					{
						"type"	"objectptr"
					}
				}
			}
			"CAI_BaseNPC::RunAI"
			{
				"offset"	"CAI_BaseNPC::RunAI"
				"hooktype"	"entity"
				"return"	"void"
				"this"		"entity"
			}
			"CBaseCombatWeapon::SendWeaponAnim"
			{
				"offset"	"CBaseCombatWeapon::SendWeaponAnim"
				"hooktype"	"entity"
				"return"	"bool"
				"this"		"entity"
				"arguments"
				{
					"iActivity"
					{
						"type"	"int"
					}
				}
			}
			"CServerGameDLL::LevelInit"
			{
				"offset"	"CServerGameDLL::LevelInit"
				"hooktype"	"raw"
				"return"	"bool"
				"this"		"ignore"
				"arguments"
				{
					"pMapName"
					{
						"type"	"charptr"
					}
					"pMapEntities"
					{
						"type"	"charptr"
					}
					"pOldLevel"
					{
						"type"	"charptr"
					}
					"pLandmarkName"
					{
						"type"	"charptr"
					}
					"loadGame"
					{
						"type"	"bool"
					}
					"background"
					{
						"type"	"bool"
					}
				}
			}
			"CBaseEntity::Event_Killed"
			{
				"offset"	"CBaseEntity::Event_Killed"
				"hooktype"	"entity"
				"return"	"void"
				"this"		"entity"
				"arguments"
				{
					"info"
					{
						"type"	"objectptr"
						"flags"	"byref"
					}
				}
			}
			"CBaseEntity::KeyValue_char"
			{
				"offset"	"CBaseEntity::KeyValue_char"
				"hooktype"	"entity"
				"return"	"bool"
				"this"		"entity"
				"arguments"
				{
					"szKeyName"
					{
						"type"	"charptr"
					}
					"szValue"
					{
						"type"	"charptr"
					}
				}
			}
			"CBasePlayer::CreateRagdollEntity"
			{
				"offset"	"CBasePlayer::CreateRagdollEntity"
				"hooktype"	"entity"
				"return"	"void"
				"this"		"entity"
			}
			"CBasePlayer::ForceRespawn"
			{
				"offset"	"CBasePlayer::ForceRespawn"
				"hooktype"	"entity"
				"return"	"void"
				"this"		"entity"
			}
			"CBasePlayer::StartObserverMode"
			{
				"offset"	"CBasePlayer::StartObserverMode"
				"hooktype"	"entity"
				"return"	"bool"
				"this"		"entity"
				"arguments"
				{
					"mode"
					{
						"type"	"int"
					}
				}
			}

			//   _____  ______ _______ ____  _    _ _____  
			//  |  __ \|  ____|__   __/ __ \| |  | |  __ \ 
			//  | |  | | |__     | | | |  | | |  | | |__) |
			//  | |  | |  __|    | | | |  | | |  | |  _  / 
			//  | |__| | |____   | | | |__| | |__| | | \ \ 
			//  |_____/|______|  |_|  \____/ \____/|_|  \_\

			"CBasePlayer::SetSuitUpdate"
			{
				"signature"	"CBasePlayer::SetSuitUpdate"
				"callconv"	"thiscall"
				"return"	"void"
				"this"		"entity"
				"arguments"
				{
					"name"
					{
						"type"	"charptr"
					}
					"fgroup"
					{
						"type"	"int"
					}
					"iNoRepeat"
					{
						"type"	"int"
					}
				}
			}
			"UTIL_GetLocalPlayer"
			{
				"signature"	"UTIL_GetLocalPlayer"
				"callconv"	"cdecl"
				"return"	"cbaseentity"
			}
			"CAI_GoalEntity::ResolveNames"
			{
				"signature"	"CAI_GoalEntity::ResolveNames"
				"callconv"	"thiscall"
				"return"	"void"
				"this"		"entity"
			}
			"CAI_LeadBehavior::CanSelectSchedule"
			{
				"signature"	"CAI_LeadBehavior::CanSelectSchedule"
				"callconv"	"thiscall"
				"return"	"bool"
				"this"		"ignore"
			}
			"Pickup_ForcePlayerToDropThisObject"
			{
				"signature"	"Pickup_ForcePlayerToDropThisObject"
				"callconv"	"cdecl"
				"return"	"void"
				"arguments"
				{
					"pTarget"
					{
						"type"	"cbaseentity"
					}
				}
			}
			"CAI_BaseNPC::SetPlayerAvoidState"
			{
				"signature"	"CAI_BaseNPC::SetPlayerAvoidState"
				"callconv"	"thiscall"
				"return"	"void"
				"this"		"entity"
			}
			"CBoneSetup::AccumulatePose"
			{
				"signature"	"CBoneSetup::AccumulatePose"
				"callconv"	"thiscall"
				"return"	"void"
				"this"		"address"
				"arguments"
				{
					"pos"
					{
						"type"	"vectorptr"
					}
					"q"
					{
						"type"	"vectorptr"
					}
					"sequence"
					{
						"type"	"int"
					}
					"cycle"
					{
						"type"	"float"
					}
					"flWeight"
					{
						"type"	"float"
					}
					"flTime"
					{
						"type"	"float"
					}
					"pIKContext"
					{
						"type"	"objectptr"
					}
				}
			}
		}
	}
	
	"bms"
	{
		
		//   _____ _____ _____ _   _       _______ _    _ _____  ______  _____ 
		//  / ____|_   _/ ____| \ | |   /\|__   __| |  | |  __ \|  ____|/ ____|
		// | (___   | || |  __|  \| |  /  \  | |  | |  | | |__) | |__  | (___  
		//  \___ \  | || | |_ | . ` | / /\ \ | |  | |  | |  _  /|  __|  \___ \ 
		//  ____) |_| || |__| | |\  |/ ____ \| |  | |__| | | \ \| |____ ____) |
		// |_____/|_____\_____|_| \_/_/    \_\_|   \____/|_|  \_\______|_____/ 
		
		"Signatures"
		{
			"CBasePlayer::SetSuitUpdate" // CBasePlayer::SetSuitUpdate(CBasePlayer*, const char*, int, int)
			{
				"windows"		"\x55\x8B\xEC\x56\x8B\xF1\x57\x83\xCF\xFF"
				"linux"			"@_ZN11CBasePlayer13SetSuitUpdateEPKcii"
			}
			"CBaseEntity::SetCollisionBounds" //  void CBaseEntity::SetCollisionBounds(Vector  const&,Vector  const&)
			{
				"windows"		"\x55\x8B\xEC\x81\xC1\x4C\x01\x00\x00"
				"linux"			"@_ZN11CBaseEntity18SetCollisionBoundsERK6VectorS2_"
			}
			"UTIL_GetLocalPlayer" // CBasePlayer UTIL_GetLocalPlayer(void)
			{
				"windows"	"\xA1\x2A\x2A\x2A\x2A\x8B\x40\x14\x83\xF8\x01\x7E\x2A\xA1\x2A\x2A\x2A\x2A"
				"linux" 	"@_Z19UTIL_GetLocalPlayerv"
			}
			"CAI_GoalEntity::ResolveNames" // void CAI_GoalEntity::ResolveNames()
			{
				"windows"	"\x55\x8B\xEC\x83\xEC\x08\x53\x56\x57\x8D\xB9\x60\x03\x00\x00"
				"linux" 	"@_ZN14CAI_GoalEntity12ResolveNamesEv"
			}
			"CAI_LeadBehavior::CanSelectSchedule" // bool CAI_LeadBehavior::CanSelectSchedule()
			{
				"windows"	"\xA1\x2A\x2A\x2A\x2A\x56\x8B\xF1\x83\x78\x14\x01\x0F\x8F\x2A\x2A\x2A\x2A"
				"linux" 	"@_ZN16CAI_LeadBehavior17CanSelectScheduleEv"
			}
			"GlobalEntity_GetIndex" // int GlobalEntity_GetIndex( const char *pGlobalname );
			{
				"windows"	"\x55\x8B\xEC\x51\xFF\x75\x08\x8D\x45\xFC"
				"linux" 	"@_Z21GlobalEntity_GetIndexPKc"
			}
			"GlobalEntity_GetState" // GLOBALESTATE GlobalEntity_GetState( int globalIndex );
			{
				"windows"	"\x55\x8B\xEC\x8B\x45\x08\x85\xC0\x78\x2A\x3B\x05\x2A\x2A\x2A\x2A\x7D\x2A\x8D\x0C\x40\xA1\x2A\x2A\x2A\x2A\x8B\x44\x88\x04"
				"linux" 	"@_Z21GlobalEntity_GetStatei"
			}
			"GlobalEntity_GetName" // const char *GlobalEntity_GetName( int globalIndex );
			{
				"windows"	"\x55\x8B\xEC\x8B\x45\x08\x85\xC0\x78\x2A\x3B\x05\x2A\x2A\x2A\x2A\x7D\x2A\x51\x8D\x0C\x40\x8B\xD4\xA1\x2A\x2A\x2A\x2A\x66\x8B\x04\x88"
				"linux"		"@_Z20GlobalEntity_GetNamei"
			}
			"GlobalEntity_GetCounter" // int GlobalEntity_GetCounter( int globalIndex );
			{
				"windows"	"\x55\x8B\xEC\x8B\x45\x08\x85\xC0\x78\x2A\x3B\x05\x2A\x2A\x2A\x2A\x7D\x2A\x8D\x0C\x40\xA1\x2A\x2A\x2A\x2A\x8B\x44\x88\x08"
				"linux"		"@_Z23GlobalEntity_GetCounteri"
			}
			"GlobalEntity_GetMap" // const char *GlobalEntity_GetMap( int globalIndex );
			{
				"windows"	"\x55\x8B\xEC\x8B\x45\x08\x85\xC0\x78\x2A\x3B\x05\x2A\x2A\x2A\x2A\x7D\x2A\x51\x8D\x0C\x40\x8B\xD4\xA1\x2A\x2A\x2A\x2A\x66\x8B\x44\x88\x02"
				"linux"		"@_Z19GlobalEntity_GetMapi"
			}
			"GlobalEntity_SetState" // void GlobalEntity_SetState( int globalIndex, GLOBALESTATE state )
			{
				"windows"	"\x55\x8B\xEC\x80\x3D\x2A\x2A\x2A\x2A\x00\x75\x2A\x8B\x45\x08\x85\xC0\x78\x2A\x3B\x05\x2A\x2A\x2A\x2A\x7D\x2A\x8B\x4D\x0C\x8D\x14\x40\xA1\x2A\x2A\x2A\x2A\x89\x4C\x90\x04"
				"linux"		"@_Z21GlobalEntity_SetStatei12GLOBALESTATE"
			}
			"GlobalEntity_SetCounter" // void GlobalEntity_SetCounter( int globalIndex, int counter )
			{
				"windows"	"\x55\x8B\xEC\x80\x3D\x2A\x2A\x2A\x2A\x00\x75\x2A\x8B\x45\x08\x85\xC0\x78\x2A\x3B\x05\x2A\x2A\x2A\x2A\x7D\x2A\x8B\x4D\x0C\x8D\x14\x40\xA1\x2A\x2A\x2A\x2A\x89\x4C\x90\x08"
				"linux"		"@_Z23GlobalEntity_SetCounterii"
			}
			"GlobalEntity_Add" // int GlobalEntity_Add( string_t const char *pGlobalname, const char *pMapName, GLOBALESTATE state )
			{
				"windows"	"\x55\x8B\xEC\x8B\x45\x0C\xBA\x2A\x2A\x2A\x2A\xFF\x75\x10"
				"linux"		"@_Z16GlobalEntity_AddPKcS0_12GLOBALESTATE"
			}
			"Pickup_ForcePlayerToDropThisObject" // void Pickup_ForcePlayerToDropThisObject(CBaseEntity *)
			{
				"windows"	"\x55\x8B\xEC\x56\x8B\x75\x08\x85\xF6\x74\x2A\x8B\x8E\xE4\x01\x00\x00"
				"linux" 	"@_Z34Pickup_ForcePlayerToDropThisObjectP11CBaseEntity"
			}
			"CBaseAnimating::GetSequenceLinearMotion" // void CBaseAnimating::GetSequenceLinearMotion(int,Vector *)
			{
				"windows"	"\x55\x8B\xEC\x56\x8B\xF1\x80\xBE\x31\x03\x00\x00\x00\x75\x2A\x83\xBE\x74\x04\x00\x00\x00\x75\x2A\xE8\x2A\x2A\x2A\x2A\x85\xC0\x74\x2A\x8B\xCE\xE8\x2A\x2A\x2A\x2A\x8B\x8E\x74\x04\x00\x00\x85\xC9\x74\x2A\x83\x39\x00\x75\x2A\x33\xC9\xFF\x75\x0C"
				"linux" 	"@_ZN14CBaseAnimating23GetSequenceLinearMotionEiP6Vector"
			}
			"CAI_BaseNPC::SetPlayerAvoidState" // void CAI_BaseNPC::SetPlayerAvoidState()
			{
				"windows"	"\x55\x8B\xEC\x83\xEC\x5C\x53\x57\x8B\xF9"
				"linux" 	"@_ZN11CAI_BaseNPC19SetPlayerAvoidStateEv"
			}
			"CreateServerRagdoll" // CBaseEntity CreateServerRagdoll(CBaseAnimating *, int, const CTakeDamageInfo *, int, bool)
			{
				"windows"	"\x53\x8B\xDC\x83\xEC\x08\x83\xE4\xF0\x83\xC4\x04\x55\x8B\x6B\x04\x89\x6C\x24\x04\x8B\xEC\xB8\x78\x30\x00\x00"
				"linux" 	"@_Z19CreateServerRagdollP14CBaseAnimatingiRK15CTakeDamageInfoib"
			}
			"CBoneSetup::AccumulatePose" // void CBoneSetup::AccumulatePose(Vector *, Quaternion *, int, float, float, float, CIKContext *)
			{
				"linux" 	"@_ZN10CBoneSetup14AccumulatePoseEP6VectorP10QuaternionifffP10CIKContext"
			}
		}

		//    ____  ______ ______ _____ ______ _______ _____ 
		//   / __ \|  ____|  ____/ ____|  ____|__   __/ ____|
		//  | |  | | |__  | |__ | (___ | |__     | | | (___  
		//  | |  | |  __| |  __| \___ \|  __|    | |  \___ \ 
		//  | |__| | |    | |    ____) | |____   | |  ____) |
		//   \____/|_|    |_|   |_____/|______|  |_| |_____/ 
		
		"Offsets"
		{
			"CBlackMesaPlayer::PickupObject" // CBlackMesaPlayer::PickupObject(CBaseEntity*, bool)
			{
				"windows"	"433"
				"linux" 	"434"
			}
			"CBasePlayer::Spawn" // CBasePlayer::Spawn()
			{
				"windows"	"24"
				"linux" 	"25"
			}
			"CBaseCombatWeapon::SendWeaponAnim" // CBaseCombatWeapon::SendWeaponAnim(int)
			{
				"windows"	"256"
				"linux"		"257"
			}
			"CServerGameDLL::GameShutdown" // CServerGameDLL::GameShutdown()
			{
				"windows"	"8"
				"linux"		"8"
			}
			"CMultiplayRules::FAllowFlashlight" // CMultiplayRules::FAllowFlashlight()
			{
				"windows"	"56"
				"linux"		"57"
			}
			"CMultiplayRules::IsMultiplayer" // CMultiplayRules::IsMultiplayer()
			{
				"windows"	"34"
				"linux"		"35"
			}
			"CMultiplayRules::IsDeathmatch" // CMultiplayRules::IsDeathmatch()
			{
				"windows"	"58"
				"linux"		"59"
			}
			"CBM_MP_GameRules::RestoreWorld" // CBM_MP_GameRules::RestoreWorld()
			{
				"windows"	"159"
				"linux"		"160"
			}
			"CBM_MP_GameRules::RespawnPlayers" // CBM_MP_GameRules::RespawnPlayers()
			{
				"windows"	"167"
				"linux"		"168"
			}
			"CBaseCombatCharacter::IRelationType"	// CBaseCombatCharacter::IRelationType(CBaseEntity*)
			{
				"windows"	"318"
				"linux"		"319"
			}
			"CAI_BaseNPC::IsPlayerAlly" // CAI_BaseNPC::IsPlayerAlly(CBasePlayer*)
			{
				"windows"	"445"
				"linux"		"446"
			}
			"CProtoSniper::SelectSchedule" // CProtoSniper::SelectSchedule()
			{
				"windows"	"364"
				"linux"		"365"
			}
			"CSceneEntity::FindNamedEntity" // CSceneEntity::FindNamedEntity(char const*, CBaseEntity*, bool, bool)
			{
				"windows"	"248"
				"linux"		"253"
			}
			"CSceneEntity::FindNamedEntityClosest" // CSceneEntity::FindNamedEntityClosest(char const*, CBaseEntity*, bool, bool, char const*)
			{
				"windows"	"249"
				"linux"		"254"
			}
			"CBaseEntity::SetModel" // CBaseEntity::SetModel(char const*)
			{
				"windows"	"26"
				"linux"		"27"
			}
			"CBasePickup::OnTryPickUp" // CBasePickup::OnTryPickUp(CBaseEntity*)
			{
				"windows"	"236"
				"linux"		"237"
			}
			"CBaseEntity::AcceptInput" // CBaseEntity::AcceptInput(char const*, CBaseEntity*, CBaseEntity*, variant_t, int)
			{
				"windows"	"39"
				"linux"		"40"
			}
			"CBaseEntity::Think" // CBaseEntity::Think
			{
				"windows"	"50"
				"linux"		"51"
			}
			"CBasePlayer::ChangeTeam" // CBlackMesaPlayer::ChangeTeam(int, bool, bool)
			{
				"windows"	"444"
				"linux"		"445"
			}
			"CBaseEntity::ShouldCollide" // CBlackMesaPlayer::ShouldCollide(int, int)
			{
				"windows"	"18"
				"linux"		"19"
			}
			"CNPC_Ichthyosaur::IdleSound" // CNPC_Ichthyosaur::IdleSound()
			{
				"windows"	"468"
				"linux"		"469"
			}
			"CAI_BaseNPC::UpdateEnemyMemory" // CAI_BaseNPC::UpdateEnemyMemory(CBaseEntity*, Vector const&, CBaseEntity*)
			{
				"windows"	"529"
				"linux"		"533"
			}
			"CBaseAnimating::HandleAnimEvent" // CBaseAnimating::HandleAnimEvent(animevent_t*)
			{
				"windows"	"221"
				"linux"		"222"
			}
			"CAI_BaseNPC::RunAI" // CAI_BaseNPC::RunAI()
			{
				"windows"	"358"
				"linux"		"359"
			}
			"CAI_BaseNPC::ShouldPlayerAvoid" // CAI_BaseNPC::ShouldPlayerAvoid()
			{
				"windows"	"371"
				"linux"		"372"
			}
			"CBasePlayer::RemoveAllItems" // CBlackMesaPlayer::RemoveAllItems(bool)
			{
				"windows"	"365"
				"linux"		"366"
			}
			"CBaseEntity::IsNPC" // CBaseEntity::IsNPC() const
			{
				"windows"	"77"
				"linux"		"78"
			}
			"CServerGameDLL::LevelInit" // CServerGameDLL::LevelInit(char const*, char const*, char const*, char const*, bool, bool)
			{
				"windows"	"3"
				"linux"		"3"
			}
			"CBaseEntity::Event_Killed" // CBaseEntity::Event_Killed(CTakeDamageInfo const&)
			{
				"windows"	"72"
				"linux"		"73"
			}
			"CBaseEntity::KeyValue_char" // CBaseEntity::KeyValue(char const*, char const*)
			{
				"windows"	"34"
				"linux"		"33"
			}
			"CBaseEntity::Blocked" // bool CBaseEntity::Blocked(CBaseEntity*)
			{
				"windows"	"111"
				"linux"		"112"
			}
			"CBaseCombatCharacter::Weapon_Switch" // CBaseCombatCharacter::Weapon_Switch( CBaseCombatWeapon *pWeapon, int viewmodelindex /*=0*/ )
			{
				"windows"	"284"
				"linux"		"285"
			}
			"CBasePlayer::ForceRespawn" // void CBasePlayer::ForceRespawn(void)
			{
				"windows"	"347"
				"linux"		"348"
			}
			"CBasePlayer::StartObserverMode" // bool CBasePlayer::StartObserverMode(int)
			{
				"windows"	"389"
				"linux"		"390"
			}
		}
	}

	"hl2mp"
	{
		
		//   _____ _____ _____ _   _       _______ _    _ _____  ______  _____ 
		//  / ____|_   _/ ____| \ | |   /\|__   __| |  | |  __ \|  ____|/ ____|
		// | (___   | || |  __|  \| |  /  \  | |  | |  | | |__) | |__  | (___  
		//  \___ \  | || | |_ | . ` | / /\ \ | |  | |  | |  _  /|  __|  \___ \ 
		//  ____) |_| || |__| | |\  |/ ____ \| |  | |__| | | \ \| |____ ____) |
		// |_____/|_____\_____|_| \_/_/    \_\_|   \____/|_|  \_\______|_____/ 
		
		"Signatures"
		{
			"CBaseEntity::SetCollisionBounds" // void CBaseEntity::SetCollisionBounds(Vector  const&,Vector  const&)
			{
				"windows"	"\x55\x8B\xEC\x81\xC1\x4C\x01\x00\x00"
				"linux"		"@_ZN11CBaseEntity18SetCollisionBoundsERK6VectorS2_"
			}
			"CreateServerRagdoll" // CBaseEntity CreateServerRagdoll(CBaseAnimating *, int, const CTakeDamageInfo *, int, bool)
			{
				"windows"	"\x53\x8B\xDC\x83\xEC\x08\x83\xE4\xF0\x83\xC4\x04\x55\x8B\x6B\x04\x89\x6C\x24\x04\x8B\xEC\xB8\x68\x32\x00\x00"
				"linux" 	"@_Z19CreateServerRagdollP14CBaseAnimatingiRK15CTakeDamageInfoib"
			}
			"UTIL_GetLocalPlayer" // CBasePlayer UTIL_GetLocalPlayer(void)
			{
				"windows"	"\xA1\x2A\x2A\x2A\x2A\x8B\x40\x14\x83\xF8\x01\x7E\x2A\x33\xC0"
				"linux" 	"@_Z19UTIL_GetLocalPlayerv"
			}
			"Pickup_ForcePlayerToDropThisObject" // void Pickup_ForcePlayerToDropThisObject(CBaseEntity *)
			{
				"windows"	"\x55\x8B\xEC\x56\x8B\x75\x08\x85\xF6\x74\x2A\x8B\x8E\xE4\x01\x00\x00"
				"linux" 	"@_Z34Pickup_ForcePlayerToDropThisObjectP11CBaseEntity"
			}
			"GlobalEntity_GetIndex" // int GlobalEntity_GetIndex( const char *pGlobalname );
			{
				"windows"	"\x55\x8B\xEC\x51\xFF\x75\x08\x8D\x45\xFC"
				"linux" 	"@_Z21GlobalEntity_GetIndexPKc"
			}
			"GlobalEntity_GetState" // GLOBALESTATE GlobalEntity_GetState( int globalIndex );
			{
				"windows"	"\x55\x8B\xEC\x8B\x45\x08\x85\xC0\x78\x2A\x3B\x05\x2A\x2A\x2A\x2A\x7D\x2A\x8D\x0C\x40\xA1\x2A\x2A\x2A\x2A\x8B\x44\x88\x04"
				"linux" 	"@_Z21GlobalEntity_GetStatei"
			}
			"GlobalEntity_GetName" // const char *GlobalEntity_GetName( int globalIndex );
			{
				"windows"	"\x55\x8B\xEC\x8B\x45\x08\x85\xC0\x78\x2A\x3B\x05\x2A\x2A\x2A\x2A\x7D\x2A\x51\x8D\x0C\x40\x8B\xD4\xA1\x2A\x2A\x2A\x2A\x66\x8B\x04\x88"
				"linux"		"@_Z20GlobalEntity_GetNamei"
			}
			"GlobalEntity_GetCounter" // int GlobalEntity_GetCounter( int globalIndex );
			{
				"windows"	"\x55\x8B\xEC\x8B\x45\x08\x85\xC0\x78\x2A\x3B\x05\x2A\x2A\x2A\x2A\x7D\x2A\x8D\x0C\x40\xA1\x2A\x2A\x2A\x2A\x8B\x44\x88\x08"
				"linux"		"@_Z23GlobalEntity_GetCounteri"
			}
			"GlobalEntity_GetMap" // const char *GlobalEntity_GetMap( int globalIndex );
			{
				"windows"	"\x55\x8B\xEC\x8B\x45\x08\x85\xC0\x78\x2A\x3B\x05\x2A\x2A\x2A\x2A\x7D\x2A\x51\x8D\x0C\x40\x8B\xD4\xA1\x2A\x2A\x2A\x2A\x66\x8B\x44\x88\x02"
				"linux"		"@_Z19GlobalEntity_GetMapi"
			}
			"GlobalEntity_SetState" // void GlobalEntity_SetState( int globalIndex, GLOBALESTATE state )
			{
				"windows"	"\x55\x8B\xEC\x80\x3D\x2A\x2A\x2A\x2A\x00\x75\x2A\x8B\x45\x08\x85\xC0\x78\x2A\x3B\x05\x2A\x2A\x2A\x2A\x7D\x2A\x8B\x4D\x0C\x8D\x14\x40\xA1\x2A\x2A\x2A\x2A\x89\x4C\x90\x04"
				"linux"		"@_Z21GlobalEntity_SetStatei12GLOBALESTATE"
			}
			"GlobalEntity_SetCounter" // void GlobalEntity_SetCounter( int globalIndex, int counter )
			{
				"windows"	"\x55\x8B\xEC\x80\x3D\x2A\x2A\x2A\x2A\x00\x75\x2A\x8B\x45\x08\x85\xC0\x78\x2A\x3B\x05\x2A\x2A\x2A\x2A\x7D\x2A\x8B\x4D\x0C\x8D\x14\x40\xA1\x2A\x2A\x2A\x2A\x89\x4C\x90\x08"
				"linux"		"@_Z23GlobalEntity_SetCounterii"
			}
			"GlobalEntity_Add" // int GlobalEntity_Add( string_t const char *pGlobalname, const char *pMapName, GLOBALESTATE state )
			{
				// Fn is too short; 3 instances of this sig; str: "is_pc"
				"windows"	"\x55\x8B\xEC\xFF\x75\x10\xB9\x2A\x2A\x2A\x2A\xFF\x75\x0C\xFF\x75\x08\xE8\x2A\x2A\x2A\x2A\x5D\xC3"
				"linux"		"@_Z16GlobalEntity_AddPKcS0_12GLOBALESTATE"
			}
		}

		//    ____  ______ ______ _____ ______ _______ _____ 
		//   / __ \|  ____|  ____/ ____|  ____|__   __/ ____|
		//  | |  | | |__  | |__ | (___ | |__     | | | (___  
		//  | |  | |  __| |  __| \___ \|  __|    | |  \___ \ 
		//  | |__| | |    | |    ____) | |____   | |  ____) |
		//   \____/|_|    |_|   |_____/|______|  |_| |_____/ 
		
		"Offsets"
		{
			"CBasePlayer::CreateRagdollEntity" // void CBasePlayer::CreateRagdollEntity()
			{
				"windows"	"424"
				"linux"		"425"
			}
			"CBasePlayer::ChangeTeam" // CBasePlayer::ChangeTeam(int, bool, bool)
			{
				"windows"	"419"
				"linux"		"420"
			}
			"CBasePlayer::Spawn" // CBasePlayer::Spawn()
			{
				"windows"	"22"
				"linux" 	"23"
			}
			"CBaseCombatWeapon::SendWeaponAnim" // CBaseCombatWeapon::SendWeaponAnim(int)
			{
				"windows"	"236"
				"linux"		"237"
			}
			"CBaseEntity::ShouldCollide" // CBaseEntity::ShouldCollide
			{
				"windows"	"16"
				"linux"		"17"
			}
			"CBasePlayer::RemoveAllItems" // CBasePlayer::RemoveAllItems(bool)
			{
				"windows"	"342"
				"linux"		"343"
			}
			"CBaseEntity::IsNPC" // CBaseEntity::IsNPC() const
			{
				"windows"	"70"
				"linux"		"71"
			}
			"CServerGameDLL::LevelInit" // CServerGameDLL::LevelInit(char const*, char const*, char const*, char const*, bool, bool)
			{
				"windows"	"3"
				"linux"		"3"
			}
			"CServerGameDLL::GameShutdown" // CServerGameDLL::GameShutdown()
			{
				"windows"	"8"
				"linux"		"8"
			}
			"CBaseEntity::SetModel" // CBaseEntity::SetModel(char const*)
			{
				"windows"	"24"
				"linux"		"25"
			}
			"CBaseEntity::AcceptInput" // CBaseEntity::AcceptInput(char const*, CBaseEntity*, CBaseEntity*, variant_t, int)
			{
				"windows"	"36"
				"linux"		"37"
			}
			"CBaseEntity::Think" // CBaseEntity::Think
			{
				"windows"	"47"
				"linux"		"48"
			}
			"CBaseEntity::Event_Killed" // CBaseEntity::Event_Killed(CTakeDamageInfo const&)
			{
				"windows"	"66"
				"linux"		"67"
			}
			"CBaseEntity::KeyValue_char" // CBaseEntity::KeyValue(char const*, char const*)
			{
				"windows"	"31"
				"linux"		"30"
			}
			"CAI_BaseNPC::UpdateEnemyMemory" // CAI_BaseNPC::UpdateEnemyMemory(CBaseEntity*, Vector const&, CBaseEntity*)
			{
				"windows"	"496"
				"linux"		"500"
			}
			"CBaseCombatCharacter::Weapon_Switch" // CBaseCombatCharacter::Weapon_Switch( CBaseCombatWeapon *pWeapon, int viewmodelindex /*=0*/ )
			{
				"windows"	"264"
				"linux"		"265"
			}
		}
	}
}